def pairs(num, TS):
    count = 0
    seen = set()
    for number in num:
        complement = TS - number
        if complement in seen:
            count += 1
        seen.add(number)
    return count
 
num = [2, 7, 4, 1, 3, 6]
TS = 10
result = pairs(num, TS)
print(f"Number of pairs with sum {TS}: {result}")
 
.................................................
def cr(num):
    if len(num) < 3:
        return "Range determination not possible"
    min_value = min(num)
    max_value = max(num)
    return max_value - min_value
 
num = [5, 3, 8, 1, 0, 4]
result = cr(num)
print(f"The range of the list is: {result}")
 
...............................................
import numpy as np
 
def matrix_power(matrix, m):
    if not isinstance(matrix, np.ndarray):
        matrix = np.array(matrix)
    return np.linalg.matrix_power(matrix, m)
 
A = [[1, 2], [3, 4]]
m = 2
result = matrix_power(A, m)
print(f"A^{m} is:\n{result}")
 
..................................................
from collections import Counter
 
def highoccurchar(s):
    filtered_chars = [char.lower() for char in s if char.isalpha()]
    if not filtered_chars:
        return "No alphabetic characters in the string."
    char_count = Counter(filtered_chars)
    highest_char, highest_count = char_count.most_common(1)[0]
    return highest_char, highest_count
 
input_string = "hippopotamus"
result = highoccurchar(input_string)
print(f"The maximally occurring character is '{result[0]}' with occurrence count {result[1]}.")
